(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.

(* Why3 assumption *)
Inductive ref (a:Type) :=
  | mk_ref : a -> ref a.
Axiom ref_WhyType : forall (a:Type) {a_WT:WhyType a}, WhyType (ref a).
Existing Instance ref_WhyType.
Arguments mk_ref {a}.

(* Why3 assumption *)
Definition contents {a:Type} {a_WT:WhyType a} (v:ref a) : a :=
  match v with
  | mk_ref x => x
  end.

Parameter fibonacci: Z -> Z.

Axiom fibonacci_zero : ((fibonacci 0%Z) = 0%Z).

Axiom fibonacci_un : ((fibonacci 1%Z) = 1%Z).

Axiom fibonacci_suite :
  forall (n:Z), (2%Z <= n)%Z ->
  ((fibonacci n) = ((fibonacci (n - 1%Z)%Z) + (fibonacci (n - 2%Z)%Z))%Z).

Parameter n: Z.

Axiom H : (0%Z <= n)%Z.

Parameter s: Z.

Parameter c: Z.

Parameter i: Z.

Axiom H1 : (c = (fibonacci i)).

Axiom H2 : (s = (fibonacci (i + 1%Z)%Z)).

Axiom H3 : (0%Z <= (n - i)%Z)%Z.

Axiom H4 : (i < n)%Z.

Parameter p: Z.

Axiom H5 : (p = c).

Parameter c1: Z.

Axiom H6 : (c1 = s).

Parameter s1: Z.

Axiom H7 : (s1 = (c1 + p)%Z).

Parameter i1: Z.

Axiom H8 : (i1 = (i + 1%Z)%Z).

(* Why3 goal *)
Theorem VC_fibonacci_ascendant :
  (c1 = (fibonacci i1)) /\
  ((s1 = (fibonacci (i1 + 1%Z)%Z)) /\ (0%Z <= (n - i1)%Z)%Z).
Proof.


Qed.


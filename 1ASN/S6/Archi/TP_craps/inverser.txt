/*
itération | valeur du sommet de la pile
1            41
2            42
3            43
4            44

Le programme initial empile tous les éléments du tableau 'Chaine' dans la pile.

Maintenant, ce programme inverse les éléments d'une 'chaine'

*/

PILE = 0x200 // fond de pile à l’adresse 0x200
set PILE, %sp // initialisation du pointeur de pile
set Chaine, %r1
clr %r2 // %r2 <- 0 : nombre d’éléments
clr %r4 // %r4 <- 0 indice courant de "chaine" pour l'inversion

Repeter:
  ld [%r1+%r2], %r3
  cmp %r3, %r0 // r3 ? 0
  beq Inverser
  push %r3 // %r3 -> sommet de pile
  inc %r2 // add %r2, 1, %r2
  //inc %r1 // adresse du prochain élément
  ba Repeter
  
Inverser:
  cmp %r4, %r2
  beq Stop
  pop %r5
  st %r5, [%r1+%r4]
  inc %r4
  ba Inverser
  
Stop : 
  ba Stop
Chaine : .word 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0 // 0 = fin d chaine
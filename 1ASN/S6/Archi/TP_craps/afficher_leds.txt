// write your program here
/*
ex2
iteration  | value %r4 (valeur en décimal): 
1          |  0000000a (10)
2          |  00000009 (9)
3          |  00000008 (8)
4          |  00000007 (7)
5          |  00000001 (1)
6          |  00000006 (6)
7          |  00000005 (5)
8          |  00000004 (4)
9          |  00000003 (3)
10         |  00000002 (2)

le programme initial copie les N premiers éléments de tab1 dans tab2.

ex3
le nouveau programme fonctionne comme demandé (il inverse tab1 dans tab2)
*/
N = 11 // N constante, pour éviter d’utiliser des valeurs en dur dans le programme
set Tab1, %r1
set Tab2, %r2
set N , %r5
clr %r3
Tantque: cmp %r3, N
bgeu Stop // branch if r3 greater or equal unsigned to N
dec %r5
ld [%r1+%r5], %r4 // ld = load - %r2+%r3]= adresse de tab(r3)
st %r4, [%r2+%r3]
inc %r3
ba Tantque
Stop : ba Stop
Tab1 : .word 10, 9, 8, 7, 1, 6, 5, 4, 3, 2, 1
Tab2 : .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0